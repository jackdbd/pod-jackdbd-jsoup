name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  macos-windows:
    name: Build, test (MacOS)
    strategy:
      matrix:
        os: [macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
    
      # https://github.com/marketplace/actions/setup-java-jdk
      # - name: ☕️ Setup java
      #   uses: actions/setup-java@v4
      #   with:
      #     distribution: 'temurin'
      #     java-version: '21'

      # https://github.com/marketplace/actions/github-action-for-graalvm
      - name: 🔧 Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          check-for-updates: true
          components: native-image,native-image-llvm-backend
          distribution: graalvm-community
          java-version: 21
          native-image-job-reports: true
          native-image-pr-reports: true
          version: 23.0.0

      - name: 🔧 Setup Clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest' # Clojure CLI based on tools.deps
          bb: 'latest' # Babashka
      
      # Optional step:
      #  https://github.com/marketplace/actions/cache
      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          # key: cljdeps-${{ hashFiles('deps.edn') }}
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-

      - name: 📦 Package the Babashka pod into an uberjar
        run: clojure -T:build uber
        
      - name: 🔍 Run all tests
        run: clojure -X:test

  linux:
    name: Build, test, deploy (Linux)
    # https://github.blog/changelog/2021-04-19-github-actions-limit-workflow-run-or-job-concurrency/
    concurrency: deploy-group # Ensures that only a single instance of this job is running at any given time.
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      # https://github.com/marketplace/actions/github-action-for-graalvm
      - name: 🔧 Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          check-for-updates: true
          components: native-image,native-image-llvm-backend
          distribution: graalvm-community
          java-version: 21
          native-image-job-reports: true
          native-image-pr-reports: true
          version: 23.0.0
          
      # It's important to install java before installing clojure tools, because
      # clojure tools needs java exclusions: babashka, clj-kondo and cljstyle.
      # https://github.com/marketplace/actions/setup-clojure
      - name: 🔧 Setup Clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest' # Clojure CLI based on tools.deps
          bb: 'latest' # Babashka
          
      # Optional step:
      #  https://github.com/marketplace/actions/cache
      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          # key: cljdeps-${{ hashFiles('deps.edn') }}
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-

      - name: 📦 Package the Babashka pod into an uberjar
        run: clojure -T:build uber

      - name: 📦 Compile the Babashka pod into a binary with GraalVM native-image
        run: ./script/compile.sh
        env:
          BABASHKA_STATIC: true
          BABASHKA_MUSL: true
        
      - name: 🔍 Run all tests
        run: clojure -X:test

      - name: 🌐 Deploy (TODO)
        run: echo "TODO deploy uberjar to Clojars and binary to GitHub releases"
