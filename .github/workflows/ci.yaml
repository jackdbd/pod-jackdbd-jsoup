name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  macos-windows:
    name: Build, test (MacOS, Windows)
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
    
      # It's important to install java before installing clojure tools, because
      # clojure tools needs java exclusions: babashka, clj-kondo and cljstyle.
      # https://github.com/marketplace/actions/setup-clojure
      # https://github.com/marketplace/actions/setup-java-jdk
      - name: ☕️ Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🔧 Setup Clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest' # Clojure CLI based on tools.deps
          bb: 'latest' # Babashka
          cmd-exe-workaround: 'latest' # Replaces `clojure` with `deps.clj` on Windows
      
      # Optional step:
      #  https://github.com/marketplace/actions/cache
      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          # key: cljdeps-${{ hashFiles('deps.edn') }}
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-

      - name: 📦 Package the Babashka pod into an uberjar
        run: clojure -T:build uber
        
      - name: 🔍 Run all tests
        run: clojure -X:test

  linux:
    name: Build, test, deploy (Linux)
    # https://github.blog/changelog/2021-04-19-github-actions-limit-workflow-run-or-job-concurrency/
    concurrency: deploy-group # Ensures that only a single instance of this job is running at any given time.
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      # It's important to install java before installing clojure tools, because
      # clojure tools needs java exclusions: babashka, clj-kondo and cljstyle.
      # https://github.com/marketplace/actions/setup-clojure
      # https://github.com/marketplace/actions/setup-graalvm-action
      - name: Setup GraalVM action
        uses: ayltai/setup-graalvm@v1
        with:
          java-version: 16
          graalvm-version: 21.2.0
          native-image: true

      - name: 🔧 Setup Clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest' # Clojure CLI based on tools.deps
          bb: 'latest' # Babashka
          
      # Optional step:
      #  https://github.com/marketplace/actions/cache
      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          # key: cljdeps-${{ hashFiles('deps.edn') }}
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-

      - name: 📦 Package the Babashka pod into an uberjar
        run: clojure -T:build uber

      # Use this to install musl?
      # https://github.com/marketplace/actions/shogan-rust-static-build
      # - name: ⚙️ Install musl
      #   run: sudo apt-get install -y musl

      - name: 📦 Compile the Babashka pod into a binary with GraalVM native-image
        run: ./script/compile.sh
        env:
          BABASHKA_STATIC: true
          BABASHKA_MUSL: true
          # CPATH: ""
          # LIBRARY_PATH: ""
        
      - name: 🔍 Run all tests
        run: clojure -X:test

      - name: 🌐 Deploy (TODO)
        run: echo "TODO deploy uberjar to Clojars and binary to GitHub releases"
