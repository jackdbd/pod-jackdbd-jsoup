name: 'Windows pipeline'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  windows:
    name: Build, test, deploy (Windows)
    # https://github.blog/changelog/2021-04-19-github-actions-limit-workflow-run-or-job-concurrency/
    concurrency: deploy-group # Ensures that only a single instance of this job is running at any given time.
    runs-on: windows-latest

    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v4
    
      # https://github.com/marketplace/actions/github-action-for-graalvm
      - name: üîß Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          check-for-updates: true
          components: native-image,native-image-llvm-backend
          distribution: graalvm-community
          java-version: 21
          native-image-job-reports: true
          native-image-pr-reports: true
          version: 23.0.0

      - name: Example step
        run: |
            echo "GRAALVM_HOME: $GRAALVM_HOME"
            echo "JAVA_HOME: $JAVA_HOME"
            java --version
            native-image --version

      # It's important to install java before installing clojure tools, because
      # clojure tools needs java exclusions: babashka, clj-kondo and cljstyle.
      # https://github.com/marketplace/actions/setup-clojure
      - name: üîß Setup Clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest' # Clojure CLI based on tools.deps
          bb: 'latest' # Babashka

      # Optional step:
      #  https://github.com/marketplace/actions/cache
      - name: Cache clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          # key: cljdeps-${{ hashFiles('deps.edn') }}
          key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-

      - name: üì¶ Package the Babashka pod into an uberjar
        run: clojure -T:build uber

      - run: native-image --version

      - name: üì¶ Compile the Babashka pod into a binary with GraalVM native-image
        run: ./script/compile.bat
        env:
          POD_NAME: pod-jackdbd-jsoup
        
      - name: üîç Run all tests
        run: clojure -X:test
